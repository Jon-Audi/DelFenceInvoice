rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users:
    // - Users can read and update their own profile.
    // - Admins can read and update any user profile.
    // - Authenticated users can create their own user document during signup (usually handled by backend).
    match /users/{userId} {
      allow read, update: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin');
      allow create: if request.auth != null; // Simplification for signup
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
      // Fields like 'role', 'isActive', 'permissions' should ideally only be writable by Admins.
      // This can be enforced by `request.resource.data` checks if needed for finer control.
    }

    // Company Settings:
    // - All authenticated users can read.
    // - Only Admins can write/update.
    match /companySettings/{settingsId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Products:
    // - Authenticated users can read.
    // - Admins can create, update, delete.
    match /products/{productId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Customers:
    // - Authenticated users can read, create, update, delete.
    // (Consider restricting write access to Admins or specific roles if needed)
    match /customers/{customerId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null;
    }

    // Estimates:
    // - Authenticated users can read, create, update, delete.
    match /estimates/{estimateId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null;
    }

    // Orders:
    // - Authenticated users can read, create, update, delete.
    match /orders/{orderId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null;
    }

    // Invoices:
    // - Authenticated users can read, create, update, delete.
    match /invoices/{invoiceId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null;
    }

    // Fallback: Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
